name: Token Sync and Build

on:
  # Trigger when figma-tokens.json or tokens/tokens.json is updated
  push:
    paths:
      - 'figma-tokens.json'
      - 'tokens/tokens.json'
      - 'tokens/**/*.json'
    branches:
      - main
  
  # Also allow manual trigger
  workflow_dispatch:
    inputs:
      sync_direction:
        description: 'Sync direction'
        required: true
        default: 'figma-to-style'
        type: choice
        options:
        - figma-to-style
        - style-to-figma

jobs:
  sync-and-build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          # Always get the latest commit
          ref: main
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check if figma-tokens.json was updated
        id: check_figma_tokens
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "figma-tokens.json"; then
            echo "figma_tokens_changed=true" >> $GITHUB_OUTPUT
            echo "🎨 figma-tokens.json was updated"
          else
            echo "figma_tokens_changed=false" >> $GITHUB_OUTPUT
            echo "📝 figma-tokens.json was not updated"
          fi
      
      - name: Check if tokens/tokens.json was updated
        id: check_style_tokens
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "tokens/tokens.json\|tokens/.*\.json"; then
            echo "style_tokens_changed=true" >> $GITHUB_OUTPUT
            echo "🔧 Style Dictionary tokens were updated"
          else
            echo "style_tokens_changed=false" >> $GITHUB_OUTPUT
            echo "📝 Style Dictionary tokens were not updated"
          fi
      
      - name: Sync from Figma to Style Dictionary
        if: steps.check_figma_tokens.outputs.figma_tokens_changed == 'true' || github.event.inputs.sync_direction == 'figma-to-style'
        run: |
          echo "🔄 Converting Figma tokens to Style Dictionary format..."
          npm run sync:from-figma
          echo "✅ Conversion completed!"
      
      - name: Sync from Style Dictionary to Figma
        if: steps.check_style_tokens.outputs.style_tokens_changed == 'true' && steps.check_figma_tokens.outputs.figma_tokens_changed == 'false' || github.event.inputs.sync_direction == 'style-to-figma'
        run: |
          echo "🔄 Converting Style Dictionary tokens to Figma format..."
          npm run sync:to-figma
          echo "✅ Conversion completed!"
      
      - name: Build CSS files
        run: |
          echo "🏗️ Building CSS files from tokens..."
          npm run build
          echo "✅ CSS build completed!"
      
      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "📝 No changes to commit"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "📝 Changes detected, will commit"
          fi
      
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all generated files
          git add dist/
          git add tokens/tokens.json
          git add figma-tokens.json
          
          # Ensure _headers file exists for Cloudflare Pages
          if [ ! -f "dist/_headers" ]; then
            echo "🔧 Restoring _headers file..."
            echo "# yaml-language-server: \$schema=" > dist/_headers
            echo "# Cloudflare Pages Headers - NOT YAML FORMAT" >> dist/_headers
            echo "" >> dist/_headers
            echo "/css/styles.css" >> dist/_headers
            echo "  Cache-Control: no-cache, no-store, must-revalidate" >> dist/_headers
            echo "  Pragma: no-cache" >> dist/_headers
            echo "  Expires: 0" >> dist/_headers
            echo "" >> dist/_headers
            echo "/css/*" >> dist/_headers
            echo "  Cache-Control: public, max-age=60" >> dist/_headers
            echo "" >> dist/_headers
            echo "/json/*" >> dist/_headers
            echo "  Cache-Control: public, max-age=60" >> dist/_headers
            echo "" >> dist/_headers
            echo "/js/*" >> dist/_headers
            echo "  Cache-Control: public, max-age=60" >> dist/_headers
            git add dist/_headers
          fi
          
          # Create commit message based on what changed
          if [[ "${{ steps.check_figma_tokens.outputs.figma_tokens_changed }}" == "true" ]]; then
            COMMIT_MSG="🎨 Auto-sync: Update CSS from Figma tokens"
          elif [[ "${{ steps.check_style_tokens.outputs.style_tokens_changed }}" == "true" ]]; then
            COMMIT_MSG="🔧 Auto-sync: Update tokens and CSS from Style Dictionary"
          else
            COMMIT_MSG="🤖 Auto-sync: Rebuild tokens and CSS"
          fi
          
          git commit -m "$COMMIT_MSG" -m "Generated by GitHub Actions" || exit 0
          
          # Configure git to handle divergent branches
          git config pull.rebase false
          
          # Pull latest changes with merge strategy (safer than rebase for generated files)
          echo "🔄 Pulling latest changes..."
          if ! git pull origin main --no-edit; then
            echo "❌ Pull failed, trying to resolve conflicts..."
            
            # For generated files, always use our version (ours strategy)
            git checkout --ours dist/css/styles.css dist/css/variables.css dist/js/tokens.js dist/scss/_variables.scss 2>/dev/null || true
            git add dist/ 2>/dev/null || true
            
            # Complete the merge
            git commit -m "🔄 Resolve conflicts: Use latest generated tokens" --no-edit || true
          fi
          
          echo "🚀 Pushing changes..."
          # Try to push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "✅ Push successful on attempt $i"
              break
            else
              echo "⚠️ Push failed on attempt $i, retrying..."
              if [ $i -lt 3 ]; then
                echo "🔄 Syncing again..."
                git pull origin main --no-edit || true
                sleep 2
              else
                echo "❌ Push failed after 3 attempts"
                exit 1
              fi
            fi
          done
      
      - name: Setup Pages
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
      
      - name: Deploy to GitHub Pages
        if: steps.check_changes.outputs.has_changes == 'true'
        uses: actions/deploy-pages@v4
        id: deployment
      
      - name: Summary
        run: |
          echo "## 🎉 Token Sync Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### What happened:" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.check_figma_tokens.outputs.figma_tokens_changed }}" == "true" ]]; then
            echo "- 🎨 **Figma tokens** were updated" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 Automatically converted to Style Dictionary format" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ steps.check_style_tokens.outputs.style_tokens_changed }}" == "true" ]]; then
            echo "- 🔧 **Style Dictionary tokens** were updated" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "- 🏗️ CSS files regenerated in \`dist/\` folder" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]]; then
            echo "- 📝 Changes committed and pushed" >> $GITHUB_STEP_SUMMARY
            echo "- 🚀 GitHub Pages updated" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🔗 Links:" >> $GITHUB_STEP_SUMMARY
            echo "- **CSS Files**: https://miiCollaboration.github.io/design-token-system/" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ℹ️ No changes needed" >> $GITHUB_STEP_SUMMARY
          fi
